(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{366:function(s,a,n){"use strict";n.r(a);var t=n(14),e=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"安装工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装工具"}},[s._v("#")]),s._v(" 安装工具")]),s._v(" "),a("p",[s._v("全局安装 CLI：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" @appworks/cli "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查是否安装成功")]),s._v("\n$ appworks "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-V")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.0")]),s._v(".0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"初始化物料项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化物料项目"}},[s._v("#")]),s._v(" 初始化物料项目")]),s._v(" "),a("p",[s._v("创建空目录然后初始化：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" my-material "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" my-material\n$ appworks init\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("根据提示，在项目根目录安装依赖后，即可进入开发。初始化的目录结构如下所示，默认会生成一个区块和组件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("├── blocks\n│      └── ExampleBlock\n├── components\n│      └── ExampleComponent\n├── README.md\n└── package.json\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"单个物料开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单个物料开发"}},[s._v("#")]),s._v(" 单个物料开发")]),s._v(" "),a("p",[s._v("以区块开发为例，假设我们需要开发一个 ProfileCard 区块用于展示用户信息，我们在项目根目录执行命令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ appworks "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n$ appworks "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" block\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("填写信息之后，会在 blocks/ 目录下生成 ProfileCard 目录及初始代码，根据提示执行以下命令即可开始开发：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" blocks/ProfileCard\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" start\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("物料开发完成后，即可通过 npm 发布。")]),s._v(" "),a("h2",{attrs:{id:"物料数据生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物料数据生成"}},[s._v("#")]),s._v(" 物料数据生成")]),s._v(" "),a("p",[a("strong",[s._v("将每个物料发布到 npm 之后")]),s._v("，我们即可生成物料集合数据，在根目录下执行以下命令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ appworks generate\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("会生成 "),a("code",[s._v("build/materials.json")]),s._v(" 文件，这个文件描述了整个物料集合的元数据。")]),s._v(" "),a("h2",{attrs:{id:"物料数据发布与使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物料数据发布与使用"}},[s._v("#")]),s._v(" 物料数据发布与使用")]),s._v(" "),a("p",[s._v("接着我们可以通过 "),a("code",[s._v("appworks sync")]),s._v(" 方式将物料数据同步到物料中心，你也可以通过私有的服务托管，同步完成后我们会得到一个 url 可以访问到这些物料数据。")]),s._v(" "),a("p",[s._v("接着在 VS Code 插件中添加自定义物料填入 URL 即可在开发项目中使用这些物料。")])])}),[],!1,null,null,null);a.default=e.exports}}]);